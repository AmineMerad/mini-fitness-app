name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, staging ]
  pull_request:
    branches: [ main, develop, staging ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: fitness_app_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript type checking
      run: npm run typecheck

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm run test:coverage
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/fitness_app_test
        NODE_ENV: test
        JWT_SECRET: test_jwt_secret_for_ci

    - name: Build application
      run: npm run build

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level moderate

  deploy-dev:
    needs: [test, security]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to Render (Development)
      run: |
        curl -X POST ${{ secrets.RENDER_WEBHOOK_DEV }}

  deploy-staging:
    needs: [test, security]
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to Render (Staging)
      run: |
        curl -X POST ${{ secrets.RENDER_WEBHOOK_STAGING }}

  deploy-prod:
    needs: [test, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to Render (Production)
      run: |
        curl -X POST ${{ secrets.RENDER_WEBHOOK_PROD }}